<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd" >

    <!--Construct Atomikos UserTransactionManager,needed to configure Spring-->
    <bean id="AtomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <!--when close is called, should we force transactions to terminate or not?-->
        <property name="forceShutdown" value="false" />
    </bean>

    <!--Also use Atomikos UserTransactionImp,needed to configure Spring-->
    <bean id="AtomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>

    <!--Configure the Spring framework to use JTA transactions from Atomikos-->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="AtomikosTransactionManager" />
        <property name="userTransaction" ref="AtomikosUserTransaction" />
        <property name="allowCustomIsolationLevels" value="true" />
        <property name="globalRollbackOnParticipationFailure" value="true" />
    </bean>

    <!-- interceptor事务拦截器 -->
    <!--<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
        <!--<property name="transactionManager" ref="transactionManager" />-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- proxy代理所有Mapper结尾的bean实例 -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
        <!--<property name="beanNames">-->
            <!--<list>-->
                <!--<value>*Mapper</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>transactionInterceptor</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <tx:annotation-driven/>

</beans>